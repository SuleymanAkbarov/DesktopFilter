/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package desktopfilter;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;

/**
 *
 * @author DeLL
 */
public class JFrame extends javax.swing.JFrame {
    public static BufferedImage IMAGE;
    public static BufferedImage IMAGE2;
    public static BufferedImage IMAGE3;
    private static String ext="";
    private static String PATH;

    /**
     * Creates new form JFrame
     */
    public JFrame() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel2 = new desktopfilter.Panel();
        imagePanel1 = new desktopfilter.ImagePanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().add(panel2, java.awt.BorderLayout.EAST);
        panel2.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout imagePanel1Layout = new javax.swing.GroupLayout(imagePanel1);
        imagePanel1.setLayout(imagePanel1Layout);
        imagePanel1Layout.setHorizontalGroup(
            imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 898, Short.MAX_VALUE)
        );
        imagePanel1Layout.setVerticalGroup(
            imagePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 744, Short.MAX_VALUE)
        );

        getContentPane().add(imagePanel1, java.awt.BorderLayout.LINE_START);

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setText("Open");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setText("Save");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem2.setText("Save as");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        File file = new File(PATH);
        try {
            ImageIO.write(IMAGE3, ext, file);
         } catch (IOException ex) {    }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    public static void setIMAGE(BufferedImage IMAGE) {
        JFrame.IMAGE = IMAGE;
    }

    public static void setIMAGE2(BufferedImage IMAGE2) {
        JFrame.IMAGE2 = IMAGE2;
    }

    public static void setIMAGE3(BufferedImage IMAGE3) {
        JFrame.IMAGE3 = IMAGE3;
    }

    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        JFileChooser chooser;
        chooser = new JFileChooser();
        chooser.showOpenDialog(panel2);
        File file = chooser.getSelectedFile();
        String path = file.getPath();
        PATH = path;        
        int i = path.lastIndexOf('.');
        if (i > 0) {
            ext = path.substring(i+1);
        }
        imagePanel1.setG(getGraphics());
        IMAGE = getImage(file);
        IMAGE2 = getImage(file);
        IMAGE3 = getImage(file);
        imagePanel1.drawImg(IMAGE);
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        JFileChooser chooser;
        chooser = new JFileChooser();
        chooser.showSaveDialog(panel2);
        String name = chooser.getSelectedFile().getName();
        File fileToSave = chooser.getSelectedFile();
        String path = fileToSave.getPath();
        path += "." + ext;
        File f = new File(path);
        try {
            ImageIO.write(IMAGE3, ext, f);
         } catch (IOException ex) {    }
    }//GEN-LAST:event_jMenuItem2ActionPerformed
  
    public static void RGB(){
        BufferedImage img = new BufferedImage(IMAGE.getWidth(), IMAGE.getHeight(), IMAGE.getType());
        img.setData(IMAGE.getRaster());
        ImagePanel p = new ImagePanel();
        IMAGE = img;
    }
    public static void RBG(){ 
        BufferedImage img = new BufferedImage(IMAGE.getWidth(), IMAGE.getHeight(), IMAGE.getType());
        img.setData(IMAGE.getRaster());
        ImagePanel p = new ImagePanel();
        p.ChannelChanger(img, 2);
        IMAGE = img;
    }
    public static void GRB(){
        BufferedImage img = new BufferedImage(IMAGE.getWidth(), IMAGE.getHeight(), IMAGE.getType());
        img.setData(IMAGE.getRaster());
        ImagePanel p = new ImagePanel();
        p.ChannelChanger(img, 3);
        IMAGE = img;
    }
    public static void GBR(){
        BufferedImage img = new BufferedImage(IMAGE.getWidth(), IMAGE.getHeight(), IMAGE.getType());
        img.setData(IMAGE.getRaster());
        ImagePanel p = new ImagePanel();
        p.ChannelChanger(img, 4);
        IMAGE = img;
    }
    public static void BGR(){
        BufferedImage img = new BufferedImage(IMAGE.getWidth(), IMAGE.getHeight(), IMAGE.getType());
        img.setData(IMAGE.getRaster());
        ImagePanel p = new ImagePanel();
        p.ChannelChanger(img, 5);
        IMAGE = img;
    }
    public static void BRG(){
        BufferedImage img = new BufferedImage(IMAGE.getWidth(), IMAGE.getHeight(), IMAGE.getType());
        img.setData(IMAGE.getRaster());
        ImagePanel p = new ImagePanel();
        p.ChannelChanger(img, 6);
        IMAGE = img;
    }
    public static void testD(){
        ImagePanel p = new ImagePanel();
        p.test(IMAGE);
    }
    public static void Drawing(){
        ImagePanel p = new ImagePanel();
        p.drawImg(IMAGE3);
    }
    
    public static void Chanel(int R, int G, int B, int br){
        ImagePanel p = new ImagePanel();
        p.Channells(IMAGE, R, G, B, br);
    }
    public static void Mono(){ 
        BufferedImage img = new BufferedImage(IMAGE3.getWidth(), IMAGE3.getHeight(), IMAGE3.getType());
        img.setData(IMAGE.getRaster());
        ImagePanel p = new ImagePanel();
        p.Monochrom(img);
        IMAGE = img;
    }
    public static void Horizon(){ 
        BufferedImage img = new BufferedImage(IMAGE3.getWidth(), IMAGE3.getHeight(), IMAGE3.getType());
        img.setData(IMAGE.getRaster());
        ImagePanel p = new ImagePanel();
        p.Horizontal(img);
        IMAGE = img;
    }
    public static void Vertic(){ 
        BufferedImage img = new BufferedImage(IMAGE3.getWidth(), IMAGE3.getHeight(), IMAGE3.getType());
        img.setData(IMAGE.getRaster());
        ImagePanel p = new ImagePanel();
        p.Vertical(img);
        IMAGE = img;
    }
    public static void Blr(){ 
        BufferedImage img = new BufferedImage(IMAGE3.getWidth(), IMAGE3.getHeight(), IMAGE3.getType());
        img.setData(IMAGE.getRaster());
        ImagePanel p = new ImagePanel();
        p.Blur(img);
        IMAGE = img;
    }
    public static void Grad(){ 
        BufferedImage img = new BufferedImage(IMAGE3.getWidth(), IMAGE3.getHeight(), IMAGE3.getType());
        img.setData(IMAGE.getRaster());
        ImagePanel p = new ImagePanel();
        Graphics g = img.getGraphics();
        p.Gradient(0, 0, img.getWidth(), img.getHeight(), g, Color.red, Color.green);
        IMAGE = img;
    }
    public static void Com(){ 
        BufferedImage img = new BufferedImage(IMAGE3.getWidth(), IMAGE3.getHeight(), IMAGE3.getType());
        img.setData(IMAGE.getRaster());
        ImagePanel p = new ImagePanel();
        p.Combo(img);
        IMAGE = img;
    }
    
    
    private BufferedImage getImage(File file){
        try {
            return ImageIO.read(file);
        } catch (IOException ex){}
        return null;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private desktopfilter.ImagePanel imagePanel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private desktopfilter.Panel panel2;
    // End of variables declaration//GEN-END:variables
}
